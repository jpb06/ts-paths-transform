{
	"$schema": "https://biomejs.dev/schemas/2.0.4/schema.json",
	"assist": { "actions": { "source": { "organizeImports": "on" } } },
	"files": {
		"includes": ["**"]
	},
	"linter": {
		"enabled": true,
		"rules": {
			"recommended": false,
			"complexity": {
				"noBannedTypes": "error",
				"noExtraBooleanCast": "error",
				"noStaticOnlyClass": "error",
				"noUselessCatch": "error",
				"noUselessConstructor": "error",
				"noUselessLoneBlockStatements": "error",
				"noUselessSwitchCase": "error",
				"noUselessRename": "error",
				"noUselessTernary": "error",
				"noUselessTypeConstraint": "error",
				"noVoid": "error",
				"useLiteralKeys": "error",
				"useOptionalChain": "error",
				"useRegexLiterals": "error",
				"noAdjacentSpacesInRegex": "error",
				"noCommaOperator": "error"
			},
			"correctness": {
				"noConstAssign": "error",
				"noConstantCondition": "error",
				"noEmptyCharacterClassInRegex": "error",
				"noEmptyPattern": "error",
				"noGlobalObjectCalls": "error",
				"noInvalidConstructorSuper": "error",
				"noInvalidUseBeforeDeclaration": "error",
				"noPrecisionLoss": "error",
				"noSelfAssign": "error",
				"noSwitchDeclarations": "error",
				"noUndeclaredVariables": "error",
				"noUnreachable": "error",
				"noUnreachableSuper": "error",
				"noUnsafeFinally": "error",
				"noUnusedVariables": "error",
				"useIsNan": "error",
				"noInvalidBuiltinInstantiation": "error",
				"useValidTypeof": "error"
			},
			"security": { "noGlobalEval": "error" },
			"style": {
				"noNamespace": "error",
				"noUselessElse": "error",
				"noImplicitBoolean": "error",
				"noNonNullAssertion": "off",
				"useAsConstAssertion": "error",
				"useBlockStatements": "error",
				"useConsistentArrayType": {
					"level": "error",
					"options": { "syntax": "shorthand" }
				},
				"useConst": "error",
				"useShorthandFunctionType": "error",
				"useSingleVarDeclarator": "error",
				"useArrayLiterals": "error"
			},
			"suspicious": {
				"noAsyncPromiseExecutor": "error",
				"noCatchAssign": "error",
				"noClassAssign": "error",
				"noCompareNegZero": "error",
				"noConfusingVoidType": "error",
				"noControlCharactersInRegex": "error",
				"noDebugger": "error",
				"noDoubleEquals": "error",
				"noDuplicateCase": "error",
				"noDuplicateClassMembers": "error",
				"noDuplicateObjectKeys": "error",
				"noDuplicateParameters": "error",
				"noEmptyBlockStatements": "error",
				"noExplicitAny": "error",
				"noExtraNonNullAssertion": "error",
				"noFallthroughSwitchClause": "error",
				"noFunctionAssign": "error",
				"noGlobalAssign": "error",
				"noImportAssign": "error",
				"noMisleadingCharacterClass": "error",
				"noMisleadingInstantiator": "error",
				"noPrototypeBuiltins": "error",
				"noRedeclare": "error",
				"noSelfCompare": "error",
				"noShadowRestrictedNames": "error",
				"noUnsafeDeclarationMerging": "error",
				"noUnsafeNegation": "error",
				"useDefaultSwitchClauseLast": "error",
				"useNamespaceKeyword": "error",
				"noWith": "error",
				"noVar": "warn"
			}
		},
		"includes": [
			"**",
			"!**/dist",
			"!**/node_modules",
			"!**/coverage",
			"!**/src/tests/bundle/**/*",
			"!**/src/examples/bundling/**/*"
		]
	},
	"javascript": {
		"globals": ["document", "navigator", "window", "exports"],
		"formatter": {
			"quoteStyle": "single",
			"semicolons": "always",
			"indentStyle": "space"
		}
	},
	"overrides": [
		{
			"includes": ["**/*.ts", "**/*.tsx", "**/*.mts", "**/*.cts"],
			"linter": {
				"rules": {
					"correctness": {
						"noConstAssign": "off",
						"noGlobalObjectCalls": "off",
						"noInvalidConstructorSuper": "off",
						"noSetterReturn": "off",
						"noUndeclaredVariables": "off",
						"noUnreachable": "off",
						"noUnreachableSuper": "off",
						"noInvalidBuiltinInstantiation": "off"
					},
					"style": {
						"useConst": "error"
					},
					"suspicious": {
						"noDuplicateClassMembers": "off",
						"noDuplicateObjectKeys": "off",
						"noDuplicateParameters": "off",
						"noFunctionAssign": "off",
						"noImportAssign": "off",
						"noRedeclare": "off",
						"noUnsafeNegation": "off",
						"useGetterReturn": "off",
						"useAwait": "error",
						"noVar": "error"
					},
					"complexity": {
						"noArguments": "error"
					}
				}
			}
		},
		{
			"includes": ["**/*.ts", "**/*.mts"],
			"linter": {
				"rules": {
					"complexity": { "noUselessTernary": "error" },
					"nursery": {},
					"suspicious": {
						"noDoubleEquals": "error",
						"useIsArray": "error",
						"noFocusedTests": "error",
						"noSkippedTests": "error"
					}
				}
			}
		}
	]
}
